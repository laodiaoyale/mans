<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bns.dao.report.BnsUserReportDao">
  <resultMap id="BaseResultMap" type="com.bns.model.report.BnsUserReport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_no" jdbcType="INTEGER" property="userNo" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="en_no" jdbcType="INTEGER" property="enNo" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="sum_num" jdbcType="INTEGER" property="sumNum" />
    <result column="in_num" jdbcType="INTEGER" property="inNum" />
    <result column="out_num" jdbcType="INTEGER" property="outNum" />
    <result column="rate" jdbcType="VARCHAR" property="rate" />
  </resultMap>
  
  <select id="findPagingByTime" parameterType="com.bns.model.report.BnsUserReport" resultMap="BaseResultMap">
      SELECT
          t.en_no,
          t.enterprise as en_name,
          sum( 1 ) AS sum_num,
          sum( CASE WHEN STATUS = 1 THEN 1 ELSE 0 END ) AS in_num  ,
          sum( CASE WHEN STATUS != 1 THEN 1 ELSE 0 END ) AS out_num ,
          ROUND(sum( CASE WHEN STATUS = 1 THEN 1 ELSE 0 END )/sum( 1 )*100,2) as rate
      FROM
          bns_user t
      WHERE t.en_no IS NOT NULL
          <!--周-->
          <if test="type != null and type == 1">
            and t.entry_date = date_add(curdate(),INTERVAL -weekday(curdate()) day)
          </if>
          <!--月-->
          <if test="type != null and type == 2">

              and date_format(t.entry_date,'%Y-%c') =  concat(#{year},'-',#{month})
          </if>
          <!--年-->
          <if test="type != null and type == 3">
              and date_format(t.entry_date,'%Y') =  #{year}
          </if>
          <if test="startDate != null and startDate != ''">
            and t.entry_date >=  #{startDate}
          </if>
          <if test="endDate != null and endDate != ''">
            <![CDATA[ and t.entry_date <=  #{endDate} ]]>
          </if>
          <if test="enNo != null and enNo != ''">
              and t.en_no in (${enNo} )
          </if>
      GROUP BY
          t.en_no,
          t.enterprise
      order by rate desc
  </select>

  <select id="findPaging" parameterType="com.bns.model.report.BnsUserReport" resultMap="BaseResultMap">
    select *
    from bns_user_report t1
    where 1=1
    <if test="enNo != null and enNo != ''">
      and t1.en_no in (${enNo} )
    </if>
    <if test="enName != null and enName != ''">
      and t1.en_name like '%${enName}%'
    </if>
    <if test="type != null and type != 0">
      and t1.type = #{type}
    </if>
    ORDER BY t1.create_time DESC
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bns_user_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bns.model.report.BnsUserReport">
    insert into bns_user_report (id, user_no, user_name, 
      en_id, en_name, type, 
      create_time, sum_num, in_num, 
      out_num, rate)
    values (#{id,jdbcType=INTEGER}, #{userNo,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, 
      #{enId,jdbcType=INTEGER}, #{enName,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{sumNum,jdbcType=INTEGER}, #{inNum,jdbcType=INTEGER}, 
      #{outNum,jdbcType=INTEGER}, #{rate,jdbcType=DECIMAL})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bns.model.report.BnsUserReport">
    update bns_user_report
    set user_no = #{userNo,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      en_id = #{enId,jdbcType=INTEGER},
      en_name = #{enName,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      sum_num = #{sumNum,jdbcType=INTEGER},
      in_num = #{inNum,jdbcType=INTEGER},
      out_num = #{outNum,jdbcType=INTEGER},
      rate = #{rate,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, user_no, user_name, en_id, en_name, type, create_time, sum_num, in_num, 
    out_num, rate
    from bns_user_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_no, user_name, en_id, en_name, type, create_time, sum_num, in_num, 
    out_num, rate
    from bns_user_report
  </select>
</mapper>