<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bns.dao.user.BnsUserDao">
  <resultMap id="BaseResultMap" type="com.bns.model.user.BnsUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="wechat_code" jdbcType="VARCHAR" property="wechatCode" />
    <result column="qq_code" jdbcType="VARCHAR" property="qqCode" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="education" jdbcType="TINYINT" property="education" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="skill" jdbcType="VARCHAR" property="skill" />
    <result column="history" jdbcType="VARCHAR" property="history" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="del_flag" jdbcType="TINYINT" property="delFlag" />
    <result column="en_no" jdbcType="INTEGER" property="enNo" />
    <result column="enterprise" jdbcType="VARCHAR" property="enterprise" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="entry_date" jdbcType="VARCHAR" property="entryDate" />
    <result column="leave_date" jdbcType="VARCHAR" property="leaveDate" />
    <result column="bank_card" jdbcType="VARCHAR" property="bankCard" />
    <result column="bank_name" jdbcType="VARCHAR" property="bankName" />
    <result column="contacts" jdbcType="VARCHAR" property="contacts" />
    <result column="relation" jdbcType="TINYINT" property="relation" />
    <result column="contact_number" jdbcType="VARCHAR" property="contactNumber" />
    <result column="insurance" jdbcType="TINYINT" property="insurance" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="real_card" jdbcType="VARCHAR" property="realCard" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bns_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.bns.model.user.BnsUser">
    insert into bns_user (id, name, mobile, 
      id_card, sex, nation, 
      address, create_time, wechat_code, 
      qq_code, age, education, 
      source, skill, history, 
      job,city,en_no,enterprise,remark,
      entry_date,leave_date,bank_card,bank_name,
      contacts,relation,contact_number,insurance,
      real_name,real_card
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{nation,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, now(), #{wechatCode,jdbcType=VARCHAR},
      #{qqCode,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{education,jdbcType=TINYINT}, 
      #{source,jdbcType=VARCHAR}, #{skill,jdbcType=VARCHAR}, #{history,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR},#{city,jdbcType=VARCHAR},#{enNo,jdbcType=INTEGER},#{enterprise,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},
      #{entryDate,jdbcType=TIMESTAMP},#{leaveDate,jdbcType=TIMESTAMP},#{bankCard,jdbcType=VARCHAR},#{bankName,jdbcType=VARCHAR},
      #{contacts,jdbcType=VARCHAR},#{relation,jdbcType=TINYINT},#{contactNumber,jdbcType=VARCHAR},#{insurance,jdbcType=TINYINT},
      #{realName,jdbcType=VARCHAR}, #{realCard,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="insertVo" parameterType="com.bns.model.user.BnsUserVo">
    insert into bns_user (id, name, mobile,
    id_card, sex, nation,
    address, create_time, wechat_code,
    qq_code, age, education,
    source, skill, history,
    job,city,en_no,enterprise,remark,
    entry_date,leave_date,bank_card,bank_name,
    contacts,relation,contact_number,insurance,
    real_name,real_card
    )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR},
    #{idCard,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{nation,jdbcType=VARCHAR},
    #{address,jdbcType=VARCHAR}, now(), #{wechatCode,jdbcType=VARCHAR},
    #{qqCode,jdbcType=VARCHAR}, #{age,jdbcType=TINYINT}, #{education,jdbcType=TINYINT},
    #{source,jdbcType=VARCHAR}, #{skill,jdbcType=VARCHAR}, #{history,jdbcType=VARCHAR},
    #{job,jdbcType=VARCHAR},#{city,jdbcType=VARCHAR},#{enNo,jdbcType=INTEGER},#{enterprise,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR},
    #{entryDate,jdbcType=TIMESTAMP},#{leaveDate,jdbcType=TIMESTAMP},#{bankCard,jdbcType=VARCHAR},#{bankName,jdbcType=VARCHAR},
    #{contacts,jdbcType=VARCHAR},#{relation,jdbcType=TINYINT},#{contactNumber,jdbcType=VARCHAR},#{insurance,jdbcType=TINYINT},
    #{realName,jdbcType=VARCHAR}, #{realCard,jdbcType=VARCHAR}
    )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.bns.model.user.BnsUser">
    update bns_user
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      nation = #{nation,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      wechat_code = #{wechatCode,jdbcType=VARCHAR},
      qq_code = #{qqCode,jdbcType=VARCHAR},
      age = #{age,jdbcType=TINYINT},
      education = #{education,jdbcType=TINYINT},
      source = #{source,jdbcType=VARCHAR},
      skill = #{skill,jdbcType=VARCHAR},
      history = #{history,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      del_flag = #{delFlag,jdbcType=TINYINT},
      en_no = #{enNo,jdbcType=INTEGER},
      enterprise = #{enterprise,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      entry_date = #{entryDate,jdbcType=TIMESTAMP},
      leave_date = #{leaveDate,jdbcType=TIMESTAMP},
      bank_card = #{bankCard,jdbcType=VARCHAR},
      bank_name =  #{bankName,jdbcType=VARCHAR},
      contacts =  #{contacts,jdbcType=VARCHAR},
      relation = #{relation,jdbcType=TINYINT},
      contact_number = #{contactNumber,jdbcType=VARCHAR},
      insurance = #{insurance,jdbcType=TINYINT},
      real_name = #{realName,jdbcType=VARCHAR},
      real_card = #{realCard,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, name, mobile, id_card, sex, nation,city, address, create_time, wechat_code,
    qq_code, age, education, source, skill, history, job
    from bns_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, mobile, id_card, sex, nation, address, create_time, wechat_code, 
    qq_code, age, education, source, skill, history, job
    from bns_user
  </select>

  <select id="getCity" resultType="java.lang.String">
     select DISTINCT city from bns_user where city is not null and city !='' and del_flag =1
  </select>
  <select id="selectCountByIdCard" parameterType="java.lang.String" resultMap="BaseResultMap">
    select * from bns_user where id_card = #{idCard} and del_flag =1
  </select>

  <!-- 查询列表 cl_t_user  -->
  <select id="findPaging" parameterType="com.bns.api.user.param.UserReqParam" resultMap="BaseResultMap">
    select *
    from bns_user t1
    where 1=1 and del_flag = 1
    <if test="name != null and name != ''">
      and t1.name like '%${name}%'
    </if>
    <if test="mobile != null and mobile != ''">
      and t1.mobile like '%${mobile}%'
    </if>
    <if test="idCard != null and idCard != ''">
      and t1.id_card = #{idCard}
    </if>
    <if test="sex != null and sex != 0">
      and t1.sex = #{sex}
    </if>
    <if test="status != null and status != 0">
      and t1.status = #{status}
    </if>
    <if test="education != null and education != 0">
      and t1.education = #{education}
    </if>
    <if test="minAge != null and minAge != 0">
      and t1.age >= #{minAge}
    </if>
    <if test="maxAge != null and maxAge != 0">
      <![CDATA[and t1.age <= #{maxAge} ]]>
    </if>
    <if test="city != null and city != ''">
      and t1.city like '%${city}%'
    </if>
    <if test="source != null and source != ''">
      and t1.source like '%${source}%'
    </if>
    <if test="startEntryDate != null and startEntryDate != ''">
      and t1.entry_date >= #{startEntryDate}
    </if>
    <if test="endEntryDate != null and endEntryDate != ''">
      <![CDATA[and t1.entry_date <= #{endEntryDate} ]]>
    </if>
    <if test="startLeaveDate != null and startLeaveDate != ''">
      and t1.leave_date >= #{startLeaveDate}
    </if>
    <if test="endLeaveDate != null and endLeaveDate != ''">
      <![CDATA[and t1.leave_date <= #{endLeaveDate} ]]>
    </if>
    <if test="insurance != null and insurance != 0">
      and t1.insurance = #{insurance}
    </if>
    <if test="enNo != null and enNo != ''">
      and t1.en_no in (${enNo} )
    </if>
    ORDER BY t1.create_time DESC
  </select>
</mapper>